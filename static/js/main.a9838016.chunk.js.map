{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","handleMovieSet","useState","setMovie","setTitle","isFindMovie","setIsFindMovie","hasError","setHasError","handleGetMovie","event","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","data","Title","Plot","Poster","imdbID","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","length","onClick","find","item","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9838016.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl !== 'N/A'\n            ? movie.imgUrl\n            : 'images/noPreview.png'}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { FC, ChangeEvent, useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard/MovieCard';\n\ntype Props = {\n  movies: Movie[];\n  handleMovieSet: (value: Movie) => void;\n};\n\nexport const FindMovie: FC<Props> = (\n  {\n    movies,\n    handleMovieSet,\n  },\n) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n  const [isFindMovie, setIsFindMovie] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const onInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasError(false);\n  };\n\n  const handleGetMovie = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = await getMovie(title);\n\n    if ('Error' in data) {\n      setHasError(true);\n    } else {\n      setMovie({\n        title: data.Title,\n        description: data.Plot,\n        imgUrl: data.Poster,\n        imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n        imdbId: data.imdbID,\n      });\n\n      setIsFindMovie(true);\n    }\n  };\n\n  const addMovie = () => {\n    if (!movie) {\n      return;\n    }\n\n    const presentMovie = movies.find(item => item.title === movie.title);\n\n    if (!presentMovie) {\n      handleMovieSet(movie);\n    }\n\n    setMovie(null);\n    setTitle('');\n    setIsFindMovie(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleGetMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': hasError,\n              })}\n              value={title}\n              onChange={onInputChange}\n\n            />\n          </div>\n\n          {hasError && (\n            <p\n              className=\"help is-danger\"\n              data-cy=\"errorMessage\"\n            >\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className=\"button is-light\"\n              disabled={title.length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {isFindMovie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=22ba0bb1';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleMovieSet = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          handleMovieSet={handleMovieSet}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}